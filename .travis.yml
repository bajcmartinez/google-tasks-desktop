matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      dist: trusty
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then npm run test; fi
  - |
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        npm run build --linux --win
      else
        npm run build
      fi

after_script:
  - COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN npm run coveralls

before_deploy:
  - >
    if ! [ "$BEFORE_DEPLOY_RUN" ]; then
      export BEFORE_DEPLOY_RUN=1;
      git config --local user.name "Juan Cruz Martinez"
      git config --local user.email "bajcmartinez@gmail.com"
      git tag "$(node -p 'require(`./package.json`).version')";
    fi;

deploy:
  - provider: releases
    api_key: $GH_TOKEN
    skip_cleanup: true
    file_glob: true
    file:
      - "dist/google-tasks-ui-*-x86_64.AppImage"
      - "dist/google-tasks-ui_*_amd64.snap"
      - "dist/google-tasks-ui-*-mac.zip"
      - "dist/google-tasks-ui-*.dmg"
      - "dist/latest-linux.yml"
      - "dist/latest-mac.yml"
    on:
      branch: master
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: googletasksui.com
    local_dir: build
    skip_cleanup: true
    on:
      branch: master

after_deploy:
  # Allow `awscli` to make requests to CloudFront.
  - aws configure set preview.cloudfront true
  # Invalidate every object in the targeted distribution.
  - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
